version: "3"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_web
    volumes:
      - ./Django-Books-Shop:/src
    ports:
      - "5000:8000"
#    command: sh -c "python3 manage.py runserver 0.0.0.0:8000"
#    command: ["sh", "-c", "python3 manage.py runserver 0.0.0.0:8000"]
    command: sh -c "python3 manage.py migrate & python3 manage.py runserver 0.0.0.0:8000"
    env_file:       # файл с переменными виртуального окружения
      - db_keys.txt 
    depends_on:  # пережде чем запуститься, сервис будет ждать, когда будут готовы к работе другие сервисы
      - db
      - cache
    
    
  db:
    image: postgres:latest
    container_name: my_db
    env_file:
      - db_keys.txt
      
      
  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db


  cache:
    image: redis:latest
    container_name: redis_cache
    # порт наружу не нужен, т.к. с ним снаружи никто общаться не будет, только изнутри